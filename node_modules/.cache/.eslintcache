[{"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/index.js":"1","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/App.js":"2","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/reportWebVitals.js":"3","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/store/store.js":"4","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/route/routers.js":"5","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/reducers/index.js":"6","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/home.js":"7","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/logup.js":"8","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/login.js":"9","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/page.js":"10","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/createpost.js":"11","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/dashboard.js":"12","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/singlepost.js":"13","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/updatePost.js":"14","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/reducers/reducer.js":"15","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/actions/action.js":"16","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links.js":"17","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links3.js":"18","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links2.js":"19","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links4.js":"20","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links5.js":"21","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links6.js":"22","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/baseURL.js":"23"},{"size":837,"mtime":1655707833379,"results":"24","hashOfConfig":"25"},{"size":177,"mtime":1655356820519,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1655277048367,"results":"27","hashOfConfig":"25"},{"size":224,"mtime":1655286488090,"results":"28","hashOfConfig":"25"},{"size":1093,"mtime":1655546640365,"results":"29","hashOfConfig":"25"},{"size":165,"mtime":1655374335414,"results":"30","hashOfConfig":"25"},{"size":193,"mtime":1655357033777,"results":"31","hashOfConfig":"25"},{"size":1757,"mtime":1655717629641,"results":"32","hashOfConfig":"25"},{"size":1753,"mtime":1655718947276,"results":"33","hashOfConfig":"25"},{"size":190,"mtime":1655357538421,"results":"34","hashOfConfig":"25"},{"size":1200,"mtime":1655554804580,"results":"35","hashOfConfig":"25"},{"size":1818,"mtime":1655551671575,"results":"36","hashOfConfig":"25"},{"size":598,"mtime":1655534448987,"results":"37","hashOfConfig":"25"},{"size":1417,"mtime":1655552008056,"results":"38","hashOfConfig":"25"},{"size":1164,"mtime":1655981160965,"results":"39","hashOfConfig":"25"},{"size":4999,"mtime":1655718582744,"results":"40","hashOfConfig":"25"},{"size":601,"mtime":1655450580657,"results":"41","hashOfConfig":"25"},{"size":545,"mtime":1655358023795,"results":"42","hashOfConfig":"25"},{"size":499,"mtime":1655463264280,"results":"43","hashOfConfig":"25"},{"size":498,"mtime":1655450577957,"results":"44","hashOfConfig":"25"},{"size":766,"mtime":1655464526259,"results":"45","hashOfConfig":"25"},{"size":863,"mtime":1655535444406,"results":"46","hashOfConfig":"25"},{"size":394,"mtime":1655705433059,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14t0imc",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/index.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/App.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/reportWebVitals.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/store/store.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/route/routers.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/reducers/index.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/home.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/logup.js",["125"],[],"import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch,useSelector } from 'react-redux';\nimport { Register } from '../actions/action';\nimport Link from './link/links3'\nimport { ToastContainer, toast } from 'react-toastify';\nexport const logupnotify = (a) => toast(a);\n\nexport default function Logout() {\n  \n  const dispatch = useDispatch();\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const onSubmit = data => {\n   dispatch(Register(data));\n  }\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n  return (\n    <div>\n      <Link/>\n       <h1>Register Form</h1><br/>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input  {...register(\"email\",{ required: true })} placeholder=\"Enter Email\"/><br/><br/>\n      { errors.email && <p style={{color:\"red\"}}>Email is required</p>}\n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register(\"password\", { required: true })} placeholder=\"Password\"/>\n      { errors.password && <p style={{color:\"red\"}}>Password is required</p>}\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}<br/><br/>\n      \n      <input {...register(\"cpassword\", { required: true })} placeholder=\"confirm Password\"/>\n      { errors.cpassword && <p style={{color:\"red\"}}>Password is required</p>}\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}<br/><br/>\n      <input type=\"submit\" />\n      <ToastContainer />\n    </form>\n    </div>\n  )\n}\n","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/login.js",["126","127","128"],[],"import React, { useEffect } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLogin } from '../actions/action';\nimport  LogUp from './link/links2'\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nexport const notify = (a) => toast(a);\n\nexport default function Login() {\n \n  const user = useSelector((state)=> state.userReducer.users);\n  const dispatch = useDispatch ()\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    console.log(22,data);\n    dispatch(getLogin(data))\n   \n    console.log(3333,user);\n    if(user && user.length !=0)\n      {\n       window.location.href=\"/dashboard\"\n      }\n  }\n  \n  // console.log(watch(\"example\")); // watch input value by passing the name of it\n  return (\n    <div>\n      <LogUp/>\n      <h1>Login Form</h1><br/>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input type=\"text\"   {...register(\"email\",{ required: true })} placeholder=\"Enter Email\" /><br/><br/>\n      { errors.email && <p style={{color:\"red\"}}>Email is required</p>}\n      {/* include validation with required or other standard HTML validation rules */}\n      <input type=\"password\"  {...register(\"password\", { required: true })} placeholder=\"Password\"/><br/><br/>\n      { errors.password && <p style={{color:\"red\"}}>Password is required</p>}\n      {/* errors will return when field validation fails  */}\n      {/* {errors.exampleRequired && <span>This field is required</span>}<br/><br/> */}\n      <input type=\"submit\"  />\n        <ToastContainer />\n    </form>\n    </div>\n  )\n}\n","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/page.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/createpost.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/dashboard.js",["129"],[],"import React, { useEffect } from 'react'\nimport Link from './link/links5'\nimport { useDispatch,useSelector } from 'react-redux'\nimport { GetData } from '../actions/action';\nimport { Table } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { Spost,Dpost } from '../actions/action';\n\nexport default function ShowPost() {\nconst dispatch = useDispatch();\nconst navigate = useNavigate();\nconst data = useSelector((state)=> state.userReducer?.users?.posts)\nconst deltpost = useSelector((state)=> state.userReducer?.deleteData)\nconsole.log(4343,data)\n\n    useEffect(()=>{\n        dispatch(GetData());\n    },[deltpost]);\n\n    function Singlepost(id)\n    {\n      console.log(677687,id)\n      dispatch(Spost(id))\n      navigate(`/singlepost/${id}`);\n    }\n   function Deletepost(id)\n     {\n       dispatch(Dpost(id))\n     }\n    function uptPost(id)\n    {\n     navigate(`/uptpost/${id}`)\n    }\n\n  return (\n    <div>\n        <Link/>\n        <h1>Dashboard </h1>\n        <Table striped bordered hover className='container'>\n  <thead>\n    <tr>\n      <th>ID</th>\n      <th>Title</th>\n      <th>Description</th>\n      <th>User_Id</th>\n      <th>Operation</th>\n    </tr>\n  </thead>\n  <tbody>\n   \n     \n      {data?.map((i,index)=>{\n            return (\n          <tr key= {index}>\n          <td>{i.id}</td>\n          <td>{i.title}</td>\n          <td>{i.description}</td>\n          <td>{i.user_id}</td>\n          <td><Button variant=\"primary\" onClick={()=>Singlepost(i.id)}> view</Button>&nbsp;&nbsp;\n           <Button variant=\"success\" onClick={()=>uptPost(i.id)} >Edit</Button> &nbsp;\n           <Button variant=\"danger\" onClick={()=>Deletepost(i.id)}>Delete</Button></td>&nbsp;\n          </tr>)\n        })}\n  \n    \n  </tbody>\n</Table>\n        \n    </div>\n  )\n}\n","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/singlepost.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/updatePost.js",["130"],[],"import React from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { update_post } from '../actions/action';\nimport Link from './link/links6';\nexport const UpdatePost = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const dispatch = useDispatch()\n    const {id} = useParams()\n    const navigate = useNavigate()\n    console.log(5657,id)\n    // const oldData = useSelector(state=>state.userReducer.updtPost);\n    // console.log(88888,oldData)\n    const onSubmit=(data)=>{\n     dispatch(update_post(id,data))\n     navigate(\"/dashboard\")\n  }\n\n  return (\n    <div>\n        <Link/>\n         <form onSubmit={handleSubmit(onSubmit)}>\n                {/* register your input into the hook by invoking the \"register\" function */}\n                <input {...register(\"title\")} placeholder=\"Enter Title\" /><br /><br />\n\n                {/* include validation with required or other standard HTML validation rules */}\n                <input {...register(\"description\", { required: true })} placeholder=\"Enter Discription\" /><br /><br />\n                {/* errors will return when field validation fails  */}\n                {errors.exampleRequired && <span>This field is required</span>}\n\n                <input type=\"submit\"  />\n            </form>\n    </div>\n  )\n}\n","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/reducers/reducer.js",["131"],[],"\nimport React from 'react'\n\nconst initialstate = {\n    users:[],\n    single:[],\n    deleteData:[],\n    updtPost:[]\n}\nexport default function userReducer(state = initialstate,action) {\n    console.log(56,action)\n     switch(action.type)\n     {\n        \n        case \"GET_LOGIN\":\n             return {\n                 ...state,\n                users : action.payload\n                 }\n        case \"GET_LOGUP\":\n            return {\n                ...state,\n               users : action.payload\n                   }         \n        \n        case \"GET_DATA\":\n        return {\n            ...state,\n             users: action.payload\n        }\n        case \"DELETE\":\n        return(\n            {\n              users:null,  \n            }\n        )\n        case \"SPOST\":\n            console.log(3333,action.payload);\n           return ({\n              single:action.payload\n\n            })\n            \n        case \"DEL\":\n               return ({\n                  deleteData:action.payload\n                })\n\n        case \"UPT_POST\":\n        return ({\n            updtPost :action.payload\n        })\n        default:\n            return state;\n             }\n}\n\n","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/actions/action.js",["132"],[],"\nimport React from 'react'\nimport axios from 'axios';\nimport instance from '../components/baseURL';\nimport { notify } from '../components/login';\nimport { logupnotify } from '../components/logup';\n\nexport const Register = (data) => {\n  console.log(5656,data)\n  return (dispatch) => {\n  const body = {\n      \"user\":{\n          \"email\":data.email,\n          \"password\":data.password,\n          \"password_confirmation\":data.cpassword\n      }\n  }\n  instance.post(`/signup`,body)\n      .then(res => {\n          console.log(res.data)\n          logupnotify(\" registration is successfully\");\n        // localStorage.setItem('user-info', JSON.stringify(res.data));\n        dispatch({\n            type : \"GET_LOGUP\",\n            payload : res.data\n        });\n      }).catch((a)=>{\n        logupnotify(a.message);\n      })\n     \n  }\n}\n\n   export const getLogin = (data) => {\n    console.log(5656,data)\n    return (dispatch) => {\n    const body = {\n        \"user\":{\n            \"email\":data.email,\n            \"password\":data.password\n        }\n    }\n    instance.post(`/signin`,body)\n    \n    \n        .then(res => {\n            notify(\"Login successfully\");\n            console.log(res.data)\n          localStorage.setItem('user-info', JSON.stringify(res.data));\n          localStorage.setItem('token',res.data.token);\n        //   localStorage.setItem('user_id', res.data.user.id)\n          console.log(\"user_id\")\n          dispatch({\n              type : \"GET_LOGIN\",\n              payload : res.data\n          });\n        }).catch((error)=>{\n            notify(error.message,error);\n        })\n       \n    };\n  };\n  \n\n  export const GetData = () => {\n      const token = localStorage.getItem('token');\n      console.log(token);\n   return (dispatch)=>{\n        instance.request({\n        method: \"get\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        },\n        url: \"/posts\"\n    }).then(res => \n       {\n        console.log(6776,res.data)\n\n            dispatch ({\n                type:'GET_DATA',\n                payload:res.data\n            })\n        })\n    }\n    };\n\n\n    export const Cpost = (data) => {\n        const token = localStorage.getItem('token');\n        console.log(token);\n        const userid = localStorage.getItem(\"user_id\")\n        const body = {\n            \"post\": \n            {\n                \"title\": data.title,\n                \"description\": data.description,\n                \"user_id\": userid\n            }\n        }\n     return (dispatch)=>{\n        instance.request({\n          method: \"post\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n          },\n          url: \"/posts\",\n          data : body\n          \n\n      }).then(res => \n         {\n          console.log(6776,res.data)\n          })\n      }\n      };\n\n     export const Deletedata=()=>{\n         return(\n             {\n                 type:'DELETE',\n             }\n         )\n     }\n     export const Spost = (id) => {\n        const token = localStorage.getItem('token');\n        console.log(token);\n            return (dispatch)=>{\n                instance.request({\n           method: \"get\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n      },\n      url: `/posts/${id}`,\n       }).then(res =>{\n          console.log(6776,res.data)\n          dispatch ({\n            type:\"SPOST\",\n            payload:res.data\n        })\n          })\n      }\n      };\n\n    export const Dpost = (id) => {\n          console.log(5665,id)\n        const token = localStorage.getItem('token');\n        console.log(token);\n            return (dispatch)=>{\n                instance.request({\n           method: \"delete\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": token\n      },\n      url: `/posts/${id}`,\n       }).then(res =>{\n          console.log(6776,res.data)\n          dispatch({\n              type:\"DEL\",\n              payload:res.data\n          })\n          })\n      }\n      };\n\n      export const update_post = (id,data) => {\n        const token = localStorage.getItem('token');\n        console.log(token);\n       \n        const userid = localStorage.getItem(\"user_id\")\n        const body = {\n            \"post\": \n            {\n                \"title\": data.title,\n                \"description\": data.description,\n                \"user_id\": userid\n            }\n        }\n        return (dispatch)=>{\n            axios.request({\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": token\n            },\n            url: `/posts/${id}`,\n            data : body\n            \n  \n        }).then(res => \n           {\n            console.log(6776,res.data)\n            dispatch({\n                type:\"UPT_POST\",\n                payload:res.data\n            })\n    \n            })\n\n        }\n        };","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links3.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links2.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links4.js",[],[],"/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links5.js",["133"],[],"import React from 'react'\nimport { Navbar,Container,Nav } from 'react-bootstrap'\nimport {Link, useNavigate} from 'react-router-dom'\nimport {Deletedata} from '../../actions/action'\n\n\n\nexport default function Links() {\nconst navigate = useNavigate();\n\nasync function logout()\n  {\n    localStorage.removeItem('user-info')\n    localStorage.removeItem('token')\n    localStorage.removeItem('user_id')\n    window.location.href='./login'\n    await Deletedata();\n\n  }\n  return (\n    <div>\n    <>\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Container>\n    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n    <Nav className=\"me-auto\">\n      \n      <Link to=\"#\" className='text' onClick={logout}>Logout</Link>\n    </Nav>\n    </Container>\n  </Navbar>\n  <br />\n</>\n    </div>\n  )\n}\n","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/link/links6.js",["134"],[],"import React from 'react'\nimport { Navbar,Container,Nav } from 'react-bootstrap'\nimport {Link, useNavigate} from 'react-router-dom'\nimport {Deletedata} from '../../actions/action'\n\n\n\n\nexport default function Links() {\nconst navigate = useNavigate();\n\nasync function logout()\n  {\n    localStorage.removeItem('user-info')\n    localStorage.removeItem('token')\n    localStorage.removeItem('user_id')\n    window.location.href='./login'\n    await Deletedata();\n\n  }\n  return (\n    <div>\n    <>\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Container>\n    <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n    <Nav className=\"me-auto\">\n      \n      <Link to=\"#\" className='text' onClick={logout}>Logout</Link>\n      {/* <Link to={window.location.href='/dashboard'} className='text' >Back Button</Link> */}\n    </Nav>\n    </Container>\n  </Navbar>\n  <br />\n</>\n    </div>\n  )\n}\n","/home/pushparajsigh/Desktop/redux-thunk/redux thunk with API/myapp/src/components/baseURL.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":3,"column":22,"nodeType":"137","messageId":"138","endLine":3,"endColumn":33},{"ruleId":"135","severity":1,"message":"139","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"135","severity":1,"message":"140","line":6,"column":10,"nodeType":"137","messageId":"138","endLine":6,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":20,"column":28,"nodeType":"143","messageId":"144","endLine":20,"endColumn":30},{"ruleId":"145","severity":1,"message":"146","line":19,"column":7,"nodeType":"147","endLine":19,"endColumn":17,"suggestions":"148"},{"ruleId":"135","severity":1,"message":"136","line":3,"column":23,"nodeType":"137","messageId":"138","endLine":3,"endColumn":34},{"ruleId":"135","severity":1,"message":"149","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":13},{"ruleId":"135","severity":1,"message":"149","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":9,"column":7,"nodeType":"137","messageId":"138","endLine":9,"endColumn":15},{"ruleId":"135","severity":1,"message":"150","line":10,"column":7,"nodeType":"137","messageId":"138","endLine":10,"endColumn":15},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'React' is defined but never used.","'navigate' is assigned a value but never used.",{"desc":"152","fix":"153"},"Update the dependencies array to be: [deltpost, dispatch]",{"range":"154","text":"155"},[672,682],"[deltpost, dispatch]"]