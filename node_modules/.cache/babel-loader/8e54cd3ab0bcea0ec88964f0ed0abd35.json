{"ast":null,"code":"var _jsxFileName = \"/home/pushparajsigh/Desktop/thunk/redux thunk with API/myapp/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLogin } from '../actions/action';\nimport LogUp from './link/links2';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const notify = (a, success) => `toast.${success}(a)`;\nexport default function Login() {\n  _s();\n\n  const user = useSelector(state => state.userReducer.users);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(22, data);\n    dispatch(getLogin(data));\n    console.log(3333, user);\n\n    if (user && user.length != 0) {\n      window.location.href = \"/dashboard\";\n    }\n  }; // console.log(watch(\"example\")); // watch input value by passing the name of it\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LogUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"email\", {\n          required: true\n        }),\n        placeholder: \"Enter Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 98\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 103\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Email is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\", {\n          required: true\n        }),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 106\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"Password is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"AbwURa1gcHCkH2K+h3r6LNYwivc=\", false, function () {\n  return [useSelector, useDispatch, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useForm","useDispatch","useSelector","getLogin","LogUp","useNavigate","ToastContainer","toast","notify","a","success","Login","user","state","userReducer","users","dispatch","register","handleSubmit","formState","errors","onSubmit","data","console","log","length","window","location","href","required","email","color","password"],"sources":["/home/pushparajsigh/Desktop/thunk/redux thunk with API/myapp/src/components/login.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getLogin } from '../actions/action';\nimport  LogUp from './link/links2'\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nexport const notify = (a,success) => `toast.${success}(a)`;\n\nexport default function Login() {\n \n  const user = useSelector((state)=> state.userReducer.users);\n  const dispatch = useDispatch ()\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const onSubmit = data => {\n    console.log(22,data);\n    dispatch(getLogin(data))\n   \n    console.log(3333,user);\n    if(user && user.length !=0)\n      {\n       window.location.href=\"/dashboard\"\n      }\n  }\n  \n  // console.log(watch(\"example\")); // watch input value by passing the name of it\n  return (\n    <div>\n      <LogUp/>\n      <h1>Login Form</h1><br/>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input type=\"text\"   {...register(\"email\",{ required: true })} placeholder=\"Enter Email\" /><br/><br/>\n      { errors.email && <p style={{color:\"red\"}}>Email is required</p>}\n      {/* include validation with required or other standard HTML validation rules */}\n      <input type=\"password\"  {...register(\"password\", { required: true })} placeholder=\"Password\"/><br/><br/>\n      { errors.password && <p style={{color:\"red\"}}>Password is required</p>}\n      {/* errors will return when field validation fails  */}\n      {/* {errors.exampleRequired && <span>This field is required</span>}<br/><br/> */}\n      <input type=\"submit\"  />\n        <ToastContainer />\n    </form>\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAQC,KAAR,MAAmB,eAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;;AACA,OAAO,MAAMC,MAAM,GAAG,CAACC,CAAD,EAAGC,OAAH,KAAgB,SAAQA,OAAQ,KAA/C;AAEP,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAE9B,MAAMC,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAUA,KAAK,CAACC,WAAN,CAAkBC,KAA7B,CAAxB;EACA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;EACA,MAAM;IAAEgB,QAAF;IAAYC,YAAZ;IAA0BC,SAAS,EAAE;MAAEC;IAAF;EAArC,IAAoDpB,OAAO,EAAjE;;EACA,MAAMqB,QAAQ,GAAGC,IAAI,IAAI;IACvBC,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAeF,IAAf;IACAN,QAAQ,CAACb,QAAQ,CAACmB,IAAD,CAAT,CAAR;IAEAC,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBZ,IAAjB;;IACA,IAAGA,IAAI,IAAIA,IAAI,CAACa,MAAL,IAAc,CAAzB,EACE;MACCC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,YAArB;IACA;EACJ,CATD,CAL8B,CAgB9B;;;EACA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAEqB;MAAA;MAAA;MAAA;IAAA,QAFrB,eAGA;MAAM,QAAQ,EAAEV,YAAY,CAACG,QAAD,CAA5B;MAAA,wBAEE;QAAO,IAAI,EAAC,MAAZ;QAAA,GAAyBJ,QAAQ,CAAC,OAAD,EAAS;UAAEY,QAAQ,EAAE;QAAZ,CAAT,CAAjC;QAA+D,WAAW,EAAC;MAA3E;QAAA;QAAA;QAAA;MAAA,QAFF,eAE6F;QAAA;QAAA;QAAA;MAAA,QAF7F,eAEkG;QAAA;QAAA;QAAA;MAAA,QAFlG,EAGIT,MAAM,CAACU,KAAP,iBAAgB;QAAG,KAAK,EAAE;UAACC,KAAK,EAAC;QAAP,CAAV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHpB,eAKE;QAAO,IAAI,EAAC,UAAZ;QAAA,GAA4Bd,QAAQ,CAAC,UAAD,EAAa;UAAEY,QAAQ,EAAE;QAAZ,CAAb,CAApC;QAAsE,WAAW,EAAC;MAAlF;QAAA;QAAA;QAAA;MAAA,QALF,eAKgG;QAAA;QAAA;QAAA;MAAA,QALhG,eAKqG;QAAA;QAAA;QAAA;MAAA,QALrG,EAMIT,MAAM,CAACY,QAAP,iBAAmB;QAAG,KAAK,EAAE;UAACD,KAAK,EAAC;QAAP,CAAV;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANvB,eASE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QATF,eAUI,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GAnCuBpB,K;UAETT,W,EACID,W,EACyCD,O;;;KAJpCW,K"},"metadata":{},"sourceType":"module"}