{"ast":null,"code":"var _jsxFileName = \"/home/pushparajsigh/Desktop/thunk/redux form/myapp/src/components/login.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"/* \\\"handleSubmit\\\" will validate your inputs before invoking \\\"onSubmit\\\" */\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"test\",\n        ...register(\"example\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"exampleRequired\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Login","handleSubmit","onSubmit","register","required","errors","exampleRequired"],"sources":["/home/pushparajsigh/Desktop/thunk/redux form/myapp/src/components/login.js"],"sourcesContent":["import React from 'react'\n\nexport default function Login() {\n  return (\n    <div>\n      /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* register your input into the hook by invoking the \"register\" function */}\n      <input defaultValue=\"test\" {...register(\"example\")} />\n      \n      {/* include validation with required or other standard HTML validation rules */}\n      <input {...register(\"exampleRequired\", { required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n      \n      <input type=\"submit\" />\n    </form>\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAC9B,oBACE;IAAA,yGAEA;MAAM,QAAQ,EAAEC,YAAY,CAACC,QAAD,CAA5B;MAAA,wBAEE;QAAO,YAAY,EAAC,MAApB;QAAA,GAA+BC,QAAQ,CAAC,SAAD;MAAvC;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE,sBAAWA,QAAQ,CAAC,iBAAD,EAAoB;UAAEC,QAAQ,EAAE;QAAZ,CAApB;MAAnB;QAAA;QAAA;QAAA;MAAA,QALF,EAOGC,MAAM,CAACC,eAAP,iBAA0B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAP7B,eASE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;KAjBuBN,K"},"metadata":{},"sourceType":"module"}